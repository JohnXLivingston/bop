// The header of the widget must be on front of the left column (labels)
$zindex-planning-header: 30;
// The labels must be in front of items when scroller horizontally.
$zindex-planning-label: 20;
// Items must be on front of the grid.
$zindex-planning-item: 10;

// *******************************************************
// ************ Main containers
// *******************************************************

// The widget planning.
.widget-planning {
  bottom: 50px; // to let space for horizontal scrollbar.
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

// This is the container for the whole widget.
// Used to set scrollbars.
.widget-planning-container {
  height: 100%;
  overflow-x: scroll;
  overflow-y: auto;
  position: relative;
  width: 100%;
}

// The headers line for the planning widget.
.widget-planning-header {
  @include flex;

  background-color: $background-color-empty;
  border-bottom: solid 1px $border-color-light;
  height: 45px;
  position: sticky;
  top: 0;
  // width: max-content :
  // This is a trick that's make the
  // sticky work. If you remove it,
  // the header will only be as large
  // as the screen. And scrolling down
  // and right will cause the grid to
  // display under the header.
  width: max-content;
  z-index: $zindex-planning-header;

  &>* {
    height: 100%;
  }
}

// The planning's content (the lower part).
.widget-planning-content {
  // width: max-content : 
  // This is a trick that's make the
  // sticky work for
  // .widget-planning-label.
  // Without this, scolling to the
  // right more that the screen width
  // will scoll the label column out of
  // the screen.
  width: max-content;
}

// The right part of the widget (the calendar).
.widget-planning-calendar {
  // Take all horizontal space
  @include flex-full-fix;

  position: relative; // so that childs absolute refers to parent.
}

// *******************************************************
// ********** The left column (labels)
// *******************************************************

// The left column content.
.widget-planning-label {
  @include flex-fix;

  background-color: $background-color-empty;
  border: solid 1px $border-color-light;
  left: 0;
  position: sticky;
  width: 300px;
  z-index: $zindex-planning-label;
}

// *******************************************************
// ********** The background calendar grid
// *******************************************************

// This is the container in which there will weeks grid.
.widget-planning-weeks {
  @include flex;

  height: 100%;
}

// Each week's grid is contained in any of these.
.widget-planning-week {
  // Border between weeks
  border-right: solid 1px $border-color-light;
  height: 100%;

  // In the planning header, the week has two lines:
  //  - a label (week number, month, ...)
  //  - days list
  .widget-planning-header & {
    // Parts are one on top of each other.
    @include flex-v;

    .widget-planning-week-label {
      // The label takes the space.
      @include flex-full-fix;
      // The label content is flexed.
      @include flex;

      border-bottom: solid 1px $border-color-light;
    }

    .widget-planning-week-days {
      @include flex-fix;

      text-align: center;
    }
  }
}

// And a week is filled with days.
.widget-planning-week-days {
  @include flex;

  &>* {
    width: 45px;
  }

  // In the planning content, days are here to draw a grid.
  .widget-planning-content & {
    height: 100%;

    &>* {
      @include flex-full-fix;

      border: solid 1px $border-color-light;
      height: 100%;
    }
  }
}

// Non working days (dayoff).
.widget-planning-dayoff {
  .widget-planning-content & {
    @include background-stripes($background-color-empty, $background-color-light);
  }
}

// *******************************************************
// ********** Nodes
// *******************************************************

// A node content (itself, and childs).
// .widget-planning-node {}

// The node itself.
.widget-planning-node-content {
  @include flex;

  height: 45px;

  &>* {
    // The node content must use all available height.
    height: 100%;
  }
}

// The node's childs
.widget-planning-node-childs {
  .widget-planning-label {
    padding-left: 45px;
  }

  // FIXME: find an other way to deal with the tree.
  .widget-planning-node-childs {
    .widget-planning-label {
      padding-left: 90px;
    }
  }
}

// *******************************************************
// ********** Node items (tasks, summaries, ...)
// *******************************************************

// The item container take all the space.
.widget-planning-line {
  // NB: the parent (.widget-planning-calendar) must have
  // position: relative.
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.widget-planning-item {
  // An item as absolute position.
  // left and width are set by the template.
  bottom: 0;
  color: $color-filled;
  margin: 5px 0;
  position: absolute;
  top: 0;
  z-index: $zindex-planning-item;
}

.widget-planning-item-inner {
  height: 100%;
  position: relative;
}

.widget-planning-item-part {
  @include flex-v;
  bottom: 0;
  position: absolute;
  top: 0;
  width: 100%;

  [data-widget-planning-node-type='task'] &:not(.widget-planning-item-part-off) {
    border-radius: 8px;
  }
}

.widget-planning-item-part-off {
  @include background-stripes(transparent, $background-color-light);
}

.widget-planning-item-txt {
  color: $color-filled;
  max-width: 100%;
  overflow: hidden;
  padding: 0 6px;
  vertical-align: middle;
  white-space: nowrap;
  // FIXME?
  // Fix antialiasing for Safari/macOS
  // -webkit-font-smoothing: antialiased;
  // -moz-osx-font-smoothing: grayscale;
}

.widget-planning-split {
  left: 0;
  margin-top: -9px;
  padding: 8px 0;
  position: absolute;
  right: 0;
  top: 50%;
}

.widget-planning-split-inner {
  border-top: dotted 1px;
}

.widget-planning-item-part {
  // default color
  background-color: rgb(34, 34, 34);
}

.widget-planning-split-inner {
  border-color: rgb(34, 34, 34);
}

$widget-planning-colors:
'1' rgb(49, 74, 225),
'2' rgb(39, 122, 245),
'3' rgb(72, 177, 237),
'4' rgb(56, 180, 176),
'5' rgb(147, 182, 25),
'6' rgb(226, 144, 0),
'7' rgb(238, 103, 29),
'8' rgb(120, 60, 37),
'9' rgb(203, 27, 106),
'10' rgb(162, 62, 187),
'11' rgb(108, 55, 205),
'unallocated' rgb(153, 153, 153),
'partially' rgb(136, 205, 164),
'full' rgb(34, 161, 85),
'overloaded' rgb(237, 47, 54),
'off' rgb(90, 95, 115);

@each $color-name, $color in $widget-planning-colors {
  &[data-widget-planning-color='#{$color-name}'] {
    .widget-planning-item-part {
      background-color: $color;
    }

    .widget-planning-split-inner {
      border-color: $color;
    }
  }
}
